"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[945],{6990:e=>{e.exports=JSON.parse('{"functions":[{"name":"byPredicate","desc":"First looks through the children of `root` for an Instance that passes the conditions of the predicate and if none \\nare found begins listening for new instances and changes to existing ones.\\n\\n```lua\\nlocal found = byPredicate(workspace, math.huge, function(child)\\n\\t-- waiting for the first descendant of workspace that\'s a BasePart and has a certain color\\n\\treturn child:IsA(\\"BasePart\\") and child.Color = Color3.fromRGB(100, 120, 80)\\nend)\\n```","params":[{"name":"root","desc":"","lua_type":"Instance"},{"name":"timeout","desc":"How long before the promise automatically resolves as nil.","lua_type":"number"},{"name":"predicate?","desc":"The conditions under which the search has successfully found a result.","lua_type":"(Instance) -> boolean"}],"returns":[{"desc":"The result of the search.","lua_type":"Instance?"}],"function_type":"static","source":{"line":34,"path":"src/WaitForChild.luau"}},{"name":"byName","desc":"First looks through the children of `root` for an Instance with the same name and if none are found begins \\nlistening for new instances and changes to existing ones.\\n\\n```lua\\nlocal found = byName(workspace, math.huge, \\"Part\\")\\n```","params":[{"name":"root","desc":"","lua_type":"Instance"},{"name":"timeout","desc":"How long before the promise automatically resolves as nil.","lua_type":"number"},{"name":"name","desc":"The name of the Instance being searched for.","lua_type":"string"}],"returns":[{"desc":"The result of the search.","lua_type":"Instance?"}],"function_type":"static","source":{"line":119,"path":"src/WaitForChild.luau"}},{"name":"ofClass","desc":"First looks through the children of `root` for an Instance with the same ClassName and if none are found begins \\nlistening for new instances and changes to existing ones.\\n\\n```lua\\nlocal found = ofClass(workspace, math.huge, \\"Part\\")\\n```","params":[{"name":"root","desc":"","lua_type":"Instance"},{"name":"timeout","desc":"How long before the promise automatically resolves as nil.","lua_type":"number"},{"name":"className","desc":"The class name of the Instance being searched for.","lua_type":"string"}],"returns":[{"desc":"The result of the search.","lua_type":"Instance?"}],"function_type":"static","source":{"line":141,"path":"src/WaitForChild.luau"}},{"name":"whichIsA","desc":"First looks through the children of `root` for an Instance that\'s equivalent to or a subclass of a given class\\nand if if none are found then begins listening for new instances and changes to existing ones.\\n\\n```lua\\nlocal found = whichIsA(workspace, math.huge, \\"BasePart\\")\\n```","params":[{"name":"root","desc":"","lua_type":"Instance"},{"name":"timeout","desc":"How long before the promise automatically resolves as nil.","lua_type":"number"},{"name":"className","desc":"The class name of the Instance being search for.","lua_type":"string"}],"returns":[{"desc":"The result of the search.","lua_type":"Instance?"}],"function_type":"static","source":{"line":165,"path":"src/WaitForChild.luau"}},{"name":"byPath","desc":"Travels the path starting from the `root` instance and if none are found begins listening for new instances and \\nchanges to existing ones at each step.\\n\\n```lua\\nlocal found = byPath(game, math.huge, { \\"Workspace\\", \\"Terrain\\" })\\n```","params":[{"name":"root","desc":"","lua_type":"Instance"},{"name":"timeout","desc":"How long before the promise automatically resolves as nil.","lua_type":"number"},{"name":"path","desc":"The path by name from the root to the target Instance.","lua_type":"{ string }"}],"returns":[{"desc":"The result of the search.","lua_type":"Instance?"}],"function_type":"static","source":{"line":189,"path":"src/WaitForChild.luau"}}],"properties":[],"types":[],"name":"WaitForChild","desc":"WaitForChild is a set of functions that waits for descendants conditionally.","source":{"line":11,"path":"src/WaitForChild.luau"}}')}}]);